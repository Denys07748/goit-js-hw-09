{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAwBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACjDA,E,IA/BMS,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMC,EAAeF,EAAMG,cAAcC,SACnChB,GAASc,EAAad,MAAMiB,MAC5BC,GAAQJ,EAAaI,KAAKD,MAC1BE,GAAUL,EAAaK,OAAOF,OAyBtC,SAAyBG,GACvB,I,IADyBpB,EAAFoB,EAAEpB,MAAOkB,EAATE,EAASF,KAAMC,EAAfC,EAAeD,OAC7BE,EAAI,EAAGA,GAAKF,EAAQE,IAC3BvB,EAAcuB,EAAGrB,GACdsB,MAAK,SAAAC,GACJ3B,EAAA4B,OAAOC,QAAQF,E,IAEhBG,OAAM,SAAAC,GACL/B,EAAA4B,OAAOI,QAAQD,E,IAEnB3B,GAASkB,C,EA1BXW,CANiB,CACf7B,QACAkB,OACAC,WAIFP,EAAMG,cAAce,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const formElements = event.currentTarget.elements;\n  const delay = +formElements.delay.value;\n  const step = +formElements.step.value;\n  const amount = +formElements.amount.value;\n\n  const formData = {\n    delay,\n    step,\n    amount,\n  };\n\n  generatePromise(formData);\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n\nfunction generatePromise({ delay, step, amount }) {\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(result => {\n        Notify.success(result);\n      })\n      .catch(error => {\n        Notify.failure(error);\n      });\n    delay += step;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","event","preventDefault","formElements","currentTarget","elements","value","step","amount","param","i","then","result","Notify","success","catch","error","failure","$ce04d3a99e08e73b$var$generatePromise","reset"],"version":3,"file":"03-promises.53acf0e9.js.map"}